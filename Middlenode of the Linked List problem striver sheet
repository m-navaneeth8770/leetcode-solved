Given the head of a singly linked list, return the middle node of the linked list.

If there are two middle nodes, return the second middle node.

 cpp code;-
 brute force;-

    ListNode* temp=head;
        int cnt=0;
        while(temp!=nullptr){
            cnt++;
            temp=temp->next;
          
        }
        int middlenode=(cnt/2)+1;

         temp=head;
         while(middlenode>1){
             temp=temp->next;
            middlenode-=1;
         }
       return temp;

optimal code:-

class Solution {
public:
    ListNode* middleNode(ListNode* head) {
    
    ListNode* slow=head;
    ListNode* fast=head;
    while(fast!=nullptr&&fast->next!=nullptr){
        slow=slow->next;
        fast=fast->next->next;
    }
  return slow;
    }
};
    
